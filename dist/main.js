!function(e){var t={};function s(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)s.d(n,o,function(t){return e[t]}.bind(null,o));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=10)}([function(e,t){e.exports=require("express")},function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("bcryptjs")},function(e,t){e.exports=require("express-session")},function(e,t){e.exports=require("cors")},function(e,t){e.exports=require("dotenv")},function(e,t){e.exports=require("body-parser")},function(e,t){e.exports=require("helmet")},function(e,t){e.exports=require("connect-mongo")},function(e,t){e.exports=require("shortid")},function(e,t,s){"use strict";s.r(t);var n=s(0),o=s.n(n),r=s(1),a=s.n(r),u=s(4),i=s.n(u),c=s(5),d=s.n(c),p=s(3),m=s.n(p),y=s(6),f=s.n(y),l=s(7),b=s.n(l),h=s(8),g=s.n(h);function q(e,t){let s=!1;switch(t){case"string":s="string"==typeof e;break;case"number":s="number"==typeof e&&!Number.isNaN(e);break;case"boolean":s="boolean"==typeof e;break;case"array":s=Array.isArray(e);break;case"object":s=e.constructor===Object;break;default:return"unknown type"}return s}function w(e,t){const s=[];return t.forEach(t=>{Object.prototype.hasOwnProperty.call(e,t)||s.push(t)}),{doesObjHaveRequiredProps:0===s.length,missingProps:s}}function j(e){let t="";switch(e.length){case 0:t="";break;case 1:t=`${e[0]}`;break;case 2:t=`${e[0]} and ${e[1]}`;break;default:for(let s=0;s<e.length-1;s+=1)t+=`${e[s]}, `;t+=`and ${e[e.length-1]}`}return t}function I(e,t){const{doesObjHaveRequiredProps:s,missingProps:n}=w(t,e);return{doesReqHaveRequiredParams:s,errorMessage:`${j(n)} ${1===n.length?"is":"are"} required`}}function v(e,t){const s=[];return e.forEach(e=>{0===t[e].length&&s.push(e)}),{areReqParamsEmpty:0!==s.length,errorMessage:`${j(s)} must not be empty`}}function x(e){const t=e.split("");return t[0]=t[0].toUpperCase(),t.push("."),t.join("")}var k=s(9),S=s.n(k);const{Schema:E,model:P}=a.a,R=new E({name:{type:String,required:!0},optionId:{type:String,required:!0}}),T=new E({name:{type:String,required:!0},type:{type:String,required:!0},options:[R],answer:[{type:String,required:!0}]}),$=new E({_id:{type:String,default:S.a.generate},name:{type:String,required:!0},takenTest:{type:Boolean,required:!0},tookTest:Date,questionsTaken:[String],questionsCorrect:[String],questionsIncorrect:[String],score:String});var A=P("Exam",new E({creator:{type:String,required:!0},lastUpdated:{type:Date,required:!0},title:{type:String,required:!0},numberOfQuestions:{type:Number,required:!0},questions:[T],students:[$]}));async function O(e){return await A.findById(e)}function C(e){const t=Object.keys(e),s=[];return t.forEach(t=>{const n=e[t];switch(t){case"questionId":q(n,"string")||s.push("questionId must be a string");break;case"name":q(n,"string")||s.push("name must be a string");break;case"type":"radio"!==n&&"checkbox"!==n&&"true_false"!==n&&s.push("question type param must equal 'radio', 'checkbox', or 'true_false'");break;case"options":q(n,"array")||s.push("options must be an array");break;case"answer":q(n,"array")||s.push("answer must be a array");break;default:return t}return t}),{areQuestionParamsTheCorrectTypes:0===s.length,incorrectTypeParamErrsArr:s}}function M(e){const{options:t,answer:s}=e,n=[];return"true"!==s[0]&&"false"!==s[0]&&n.push("answer must contain a value of 'true' or 'false'"),0!==t.length&&n.push("options must be an empty array"),n}function _(e){const{options:t,answer:s}=e,n=[],o=t.every(e=>q(e,"object")),r=t.every(e=>w(e,["name","optionId"]).doesObjHaveRequiredProps),a=t.every(e=>q(e.name,"string")),u=t.every(e=>q(e.optionId,"string")),i=t.map(e=>e.optionId),c=new Set(i),d=i.length===c.size,p=t.some(e=>e.optionId===s[0]);return 0===t.length&&n.push("options must not be an empty array"),o&&r||n.push("options must be filled with objects(each object containing a name property and a optionId property)"),a||n.push("the options name properties must be strings"),u&&d||n.push("the options optionId properties must be unique strings"),p||n.push("the options answer property must contain one optionId"),n}function U(e){const{options:t,answer:s}=e,n=[],o=t.every(e=>q(e,"object")),r=t.every(e=>w(e,["name","optionId"]).doesObjHaveRequiredProps),a=t.every(e=>q(e.name,"string")),u=t.every(e=>q(e.optionId,"string")),i=t.map(e=>e.optionId),c=new Set(i),d=i.length===c.size,p=s.every(e=>t.some(t=>t.optionId===e));return 0===t.length&&n.push("options must not be an empty array"),o&&r||n.push("options must be filled with objects, each object containing a name property and a optionId property"),a||n.push("the options name properties must be strings"),u&&d||n.push("the options optionId properties must be unique strings"),p||n.push("the options answer property must be filled with at least one optionId"),n}function H(e){const t=[];Object.keys(e).forEach(s=>{const n=e[s];switch(s){case"name":q(n,"string")||t.push("name must be a string");break;case"takenTest":q(n,"boolean")||t.push("takenTest must be an boolean");break;case"studentId":q(n,"string")||t.push("studentId must be a string");break;case"questionsTaken":q(n,"array")||t.push("questionsTaken must be an array");break;case"questionsCorrect":q(n,"array")||t.push("questionsCorrect must be an array");break;case"questionsIncorrect":q(n,"array")||t.push("questionsIncorrect must be an array");break;default:return s}return s});const s=[...new Set(t)];return{doesStudentHaveCorrectTypes:0===t.length,incorrectTypeParamErrsArr:s}}async function B(e,t,s){const{examId:n}=e.params;await async function(e){let t=!1;try{t=1===await A.countDocuments({_id:e})}catch(e){t=!1}return t}(n)?s():(t.status(400),t.json({error:"invalid examId"}))}const D=o.a.Router();D.route("/").post((function(e,t,s){const{doesReqHaveRequiredParams:n,errorMessage:o}=I(["creator","title","questions","students"],e.body);n?s():(t.status(400),t.json({error:o}))}),(function(e,t,s){const n=Object.keys(e.body),o=[];n.forEach(t=>{const s=e.body[t];switch(t){case"creator":q(s,"string")||o.push("creator must be a string");break;case"title":q(s,"string")||o.push("title must be a string");break;case"questions":q(s,"array")||o.push("questions must be a array");break;case"students":q(s,"array")||o.push("students must be a array");break;default:return t}}),0===o.length?s():(t.status(400),t.json({error:j(o)}))}),(function(e,t,s){const{questions:n}=e.body;n.every(e=>q(e,"object"))?s():(t.status(400),t.json({error:"questions must be an array of objects"}))}),(function(e,t,s){const{students:n}=e.body;n.every(e=>q(e,"object"))?s():(t.status(400),t.json({error:"students must be an array of objects"}))}),(function(e,t,s){const{questions:n}=e.body;n.every(e=>(function(e){const{doesObjHaveRequiredProps:t}=w(e,["name","type","options","answer"]);return t})(e))?s():(t.status(400),t.json({error:"each question element must have a name, type, options, and answer property"}))}),(function(e,t,s){const{students:n}=e.body;n.every(e=>(function(e){const{doesObjHaveRequiredProps:t}=w(e,["name"]);return t})(e))?s():(t.status(400),t.json({error:"each student element must have a name property"}))}),(function(e,t,s){const{questions:n}=e.body,o=[];if(n.forEach(e=>{const{areQuestionParamsTheCorrectTypes:t,incorrectTypeParamErrsArr:s}=C(e);t||o.push(...s)}),0===o.length)s();else{const e=new Set(o);t.status(400),t.json({error:`questions' param values must be correct types: ${j([...e])}`})}}),(function(e,t,s){const{students:n}=e.body,o=[];if(n.forEach(e=>{const{doesStudentHaveCorrectTypes:t,incorrectTypeParamErrsArr:s}=H(e);return t||o.push(...s),e}),0===o.length)s();else{const e=new Set(o);t.status(400),t.json({error:`students' param values must be correct types: ${j([...e])}`})}}),(function(e,t,s){const{questions:n}=e.body,o=[],r=[],a=[],u=[];if(n.forEach(e=>{switch(e.type){case"true_false":r.push(...M(e));break;case"checkbox":a.push(...U(e));break;case"radio":u.push(..._(e))}}),0!==r.length){const e=new Set(r);o.push(`for true_false type, ${j([...e])}`)}if(0!==u.length){const e=new Set(u);o.push(`for radio type, ${j([...e])}`)}if(0!==a.length){const e=new Set(a);o.push(`for checkbox type, ${j([...e])}`)}if(0===o.length)s();else{const e=new Set(o);t.status(400),t.json({error:`questions' params must have correct values for type: ${j([...e])}`})}}),(async function(e,t){const{title:s,creator:n,questions:o,students:r}=e.body,a=o.map(e=>{const{name:t,type:s,options:n,answer:o}=e;return{name:t,type:s,options:n.map(e=>({name:e.name,optionId:e.optionId})),answer:o}}),u=r.map(e=>{const{name:t}=e;return{name:t,takenTest:!1}}),i={title:s,creator:n,lastUpdated:Date.now(),numberOfQuestions:o.length,questions:a,students:u},c=await new A(i).save().catch(()=>{t.status(501),t.json({error:"could not create exam"})});t.status(201),t.json({message:"exam created",exam:c})})),D.route("/:examId").get(B,(async function(e,t){const{examId:s}=e.params,n=await O(s);t.status(200),t.json({message:"exam found",exam:n})})).put(B,(function(e,t,s){const{doesReqHaveRequiredParams:n,errorMessage:o}=I(["title"],e.body);n?s():(t.status(400),t.json({error:o}))}),(function(e,t,s){const{title:n}=e.body;q(n,"string")?s():(t.status(400),t.json({error:"title must be a string"}))}),(async function(e,t){const{examId:s}=e.params,{title:n}=e.body,o=await A.findByIdAndUpdate(s,{$set:{title:n,lastUpdated:Date.now()}},{new:!0,useFindAndModify:!1});t.status(200),t.json({message:"exam title updated",updatedExam:o})})).delete(B,(async function(e,t){const{examId:s}=e.params;await A.findByIdAndDelete(s),t.status(200),t.json({message:"exam deleted"})}));var N=D;async function F(e,t,s){const{examId:n}=e.params,{questionId:o}=e.body;await async function(e,t){return(await A.findById(e)).questions.some(e=>e._id==t)}(n,o)?s():(t.status(400),t.json({error:"invalid questionId"}))}function Q(e,t,s){const{areQuestionParamsTheCorrectTypes:n,incorrectTypeParamErrsArr:o}=C(e.body);n?s():(t.status(400),t.json({error:j(o)}))}const z=o.a.Router();z.route("/:examId").post(B,(function(e,t,s){const{doesReqHaveRequiredParams:n,errorMessage:o}=I(["name","type","options","answer"],e.body);n?s():(t.status(400),t.json({error:o}))}),Q,(function(e,t,s){let n=[];switch(e.body.type){case"checkbox":n=[...U(e.body)];break;case"radio":n=[..._(e.body)];break;case"true_false":n=[...M(e.body)]}if(0===n.length)s();else{const s=`for a question with a ${e.body.type} type: ${j(n)}`;t.status(400),t.json({error:s})}}),(async function(e,t){const{examId:s}=e.params,{name:n,type:o,options:r,answer:a}=e.body,u={name:n,type:o,options:r,answer:a},i=await A.findByIdAndUpdate(s,{$push:{questions:u},$inc:{numberOfQuestions:1},$set:{lastUpdated:Date.now()}},{useFindAndModify:!1,new:!0});t.status(201),t.json({message:"question added to exam",updatedExam:i})})).put(B,F,(function(e,t,s){[["questionId","name"],["questionId","type"],["questionId","options"],["questionId","answer"]].some(t=>{const{doesReqHaveRequiredParams:s}=I(t,e.body);return s})?s():(t.status(400),t.json({error:"questionId and at least one param(type, options, name, or answer) to be changed is required"}))}),Q,(async function(e,t,s){const{examId:n}=e.params,{questionId:o}=e.body;let r=await async function(e,t){return(await A.findById(e)).questions.find(e=>e._id==t)}(n,o);r=r.toObject();const a={};["name","type","options","answer"].forEach(t=>(a[t]=e.body[t]?e.body[t]:r[t],t));let u=[];switch(a.type){case"checkbox":u=[...U(a)];break;case"radio":u=[..._(a)];break;case"true_false":u=[...M(a)]}if(0===u.length)s();else{const e=`for a question with a ${a.type} type: ${j(u)}`;t.status(400),t.json({error:e})}}),(async function(e,t){const s=await O(e.params.examId),n=s.questions.id(e.body.questionId);["name","type","options","answer"].forEach(t=>{n[t]=e.body[t]?e.body[t]:n[t]}),await s.save();const o=await A.findByIdAndUpdate(s._id,{$set:{lastUpdated:Date.now()}},{useFindAndModify:!1,new:!0});t.status(200),t.json({message:"question edited",updatedExam:o})})).delete(B,F,(async function(e,t){const{examId:s}=e.params,n=await O(e.params.examId);n.questions.id(e.body.questionId).remove(),await n.save(),await A.findByIdAndUpdate(s,{$inc:{numberOfQuestions:-1},$set:{lastUpdated:Date.now()}},{useFindAndModify:!1,new:!0}),t.status(200),t.json({message:"question deleted"})}));var Z=z;async function L(e,t,s){const{examId:n}=e.params,{studentId:o}=e.body;await async function(e,t){return(await A.findById(e)).students.some(e=>e._id==t)}(n,o)?s():(t.status(400),t.json({error:"invalid studentId"}))}const V=o.a.Router();V.route("/:examId").post(B,(function(e,t,s){const{doesReqHaveRequiredParams:n,errorMessage:o}=I(["name"],e.body);n?s():(t.status(400),t.json({error:o}))}),(function(e,t,s){const{doesStudentHaveCorrectTypes:n,incorrectTypeParamErrsArr:o}=H(e.body);n?s():(t.status(400),t.json({error:`${j(o)}`}))}),(async function(e,t){const{examId:s}=e.params,{name:n}=e.body,o={name:n,takenTest:!1},r=await A.findByIdAndUpdate(s,{$push:{students:o}},{useFindAndModify:!1,new:!0});t.status(201),t.json({message:"student added",updatedExam:r})})).put(B,L,(function(e,t,s){const{doesReqHaveRequiredParams:n,errorMessage:o}=I(["studentId","name"],e.body);n?s():(t.status(400),t.json({error:o}))}),(function(e,t,s){const{name:n}=e.body;q(n,"string")?s():(t.status(400),t.json({error:"name must be a string"}))}),(async function(e,t){const s=await O(e.params.examId),n=s.students.id(e.body.studentId);n.name=e.body.name?e.body.name:n.name,await s.save(),t.status(200),t.json({message:"student name edited",updatedExam:s})})).delete(B,L,(async function(e,t){const s=await O(e.params.examId);s.students.id(e.body.studentId).remove(),await s.save(),t.status(200),t.json({message:"student deleted",updatedExam:s})})),V.route("/save-exam-results/:examId").put(B,(function(e,t,s){const{doesReqHaveRequiredParams:n,errorMessage:o}=I(["studentId","questionsCorrect","questionsIncorrect"],e.body);n?s():(t.status(400),t.json({error:o}))}),L,(function(e,t,s){const{questionsIncorrect:n,questionsCorrect:o}=e.body,r={questionsIncorrect:n,questionsCorrect:o},{doesStudentHaveCorrectTypes:a,incorrectTypeParamErrsArr:u}=H(r);a?s():(t.status(400),t.json({error:j(u)}))}),(async function(e,t,s){const n=[],{questionsIncorrect:o,questionsCorrect:r}=e.body,a=(await O(e.params.examId)).questions.map(e=>e._id).sort();[...o,...r].sort().join("")!==a.join("")&&n.push("questionsIncorrect must contain the questionIds of the questions that the student got incorrect and questionsCorrect must contain the questionIds of the questions that the student got correct"),0===n.length?s():(t.status(400),t.json({error:j(n)}))}),(async function(e,t){const{studentId:s,questionsCorrect:n,questionsIncorrect:o}=e.body,r=await O(e.params.examId),a=r.students.id(s);a.questionsCorrect=n,a.questionsIncorrect=o,a.questionsTaken=[...o,...n],a.takenTest=!0,await r.save(),t.status(200),t.json({message:"exam results saved",updatedExam:r})}));var G=V,J=s(2),K=s.n(J);const W=new a.a.Schema({username:{type:String,required:!0},email:{type:String,required:!0,validate:{validator:e=>X.doesNotExist({email:e}),message:"Email already exists"}},password:{type:String,required:!0}},{timestamps:!0});W.statics.doesNotExist=async function(e){return 0===await this.where(e).countDocuments()};const X=a.a.model("User",W);var Y=X;const{SESS_NAME:ee}=process.env;async function te(e){let t=!1;try{t=1===await Y.countDocuments({email:e})}catch(e){t=!1}return t}function se(e,t,s){const{session:{user:n}}=e;n?(t.status(400),t.json({error:"A user is already logged in."})):s()}function ne(e,t,s){const{session:{user:n}}=e;n?s():(t.status(401),t.json({error:"User is not logged in."}))}const oe=o.a.Router();oe.route("/").get(ne,(async function(e,t){const{session:{user:{userId:s}}}=e,n=await Y.findById(s);t.json({message:"User found.",user:n})})).delete(ne,(async function(e,t){const{session:s}=e,{user:{userId:n}}=s;try{await Y.findByIdAndRemove(n,{useFindAndModify:!1}),await A.deleteMany({creator:n}),s.destroy(()=>{t.clearCookie(ee),t.status(200),t.json({message:"User deleted.",userId:n})})}catch(e){t.status(501),t.json({error:"Could not delete user."})}})),oe.route("/signup").post(se,(function(e,t,s){const{doesReqHaveRequiredParams:n,errorMessage:o}=I(["email","username","password"],e.body);n?s():(t.status(400),t.json({error:x(o)}))}),(function(e,t,s){const n=[];["username","email","password"].forEach(t=>{q(e.body[t],"string")||n.push(`${t} must be a string`)}),0===n.length?s():(t.status(400),t.json({error:x(j(n))}))}),(function(e,t,s){const{areReqParamsEmpty:n,errorMessage:o}=v(["username","email","password"],e.body);n?(t.status(400),t.json({error:x(o)})):s()}),(async function(e,t,s){const{email:n}=e.body;await te(n)?(t.status(400),t.json({error:"Email already exists."})):s()}),(function(e,t,s){const{username:n}=e.body,o=[];/\S/g.test(n)||o.push("must not contain only whitespace"),n.length>15&&o.push("must not exceed 15 characters"),0===o.length?s():(t.status(400),t.json({error:`Username ${j(o)}.`}))}),(function(e,t,s){const{email:n}=e.body;/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(n)?s():(t.status(400),t.json({error:"Email is invalid."}))}),(function(e,t,s){const{password:n}=e.body,o=[];/\s/g.test(n)&&o.push("must not contain any whitespace"),n.length<8&&o.push("length must be at least 8 characters"),n.length>50&&o.push("length must not exceed 50 characters"),0===o.length?s():(t.status(400),t.json({error:`Password ${j(o)}.`}))}),(async function(e,t){const{username:s,email:n,password:o}=e.body,r={username:s,email:n,password:await K.a.hash(o,10)};try{const s=await new Y(r).save();e.session.user={userId:s._id},t.status(201),t.json({message:"User added.",newUser:s})}catch(e){t.status(501),t.json({error:"Could not add user."})}})),oe.route("/login").post(se,(function(e,t,s){const{doesReqHaveRequiredParams:n,errorMessage:o}=I(["email","password"],e.body);n?s():(t.status(400),t.json({error:x(o)}))}),(function(e,t,s){const{areReqParamsEmpty:n,errorMessage:o}=v(["email","password"],e.body);n?(t.status(400),t.json({error:x(o)})):s()}),(async function(e,t,s){const{email:n}=e.body;await te(n)?s():(t.status(400),t.json({error:"Email is incorrect."}))}),(async function(e,t,s){const{email:n,password:o}=e.body,r=await Y.findOne({email:n});await K.a.compare(o,r.password)?s():(t.status(400),t.json({error:"Password is incorrect."}))}),(async function(e,t){const{email:s}=e.body;try{const n=await Y.findOne({email:s});e.session.user={userId:n._id},t.status(200),t.json({message:"User logged in.",user:n})}catch(e){t.status(501),t.json({error:"Could not login user."})}})),oe.route("/logout").post(ne,(function(e,t){const{session:s}=e,{user:{userId:n}}=s;s.destroy(e=>{e?(t.status(500),t.json({error:"Something went wrong."})):(t.clearCookie(ee),t.status(200),t.json({message:"User logged out.",userId:n}))})})),oe.route("/exams").get(ne,(async function(e,t){const{session:{user:{userId:s}}}=e;try{const e=await A.find({creator:s});t.status(200),t.json({message:"Exams found.",exams:e})}catch(e){t.status(501),t.json({error:"Could not get exams."})}}));var re=oe;d.a.config();const{SESS_NAME:ae,SESS_SECRET:ue,SESS_LIFETIME:ie,DB:ce,NODE_ENV:de}=process.env,pe=o()();pe.use(i()()),pe.use(b()()),"production"===de&&pe.set("trust proxy",1);const me=ce;a.a.connect(me,{dbName:"exam-creator",useNewUrlParser:!0,useUnifiedTopology:!0}),pe.use(f.a.json());const ye=g()(m.a);pe.use(m()({name:ae,secret:ue,saveUninitialized:!1,resave:!1,store:new ye({mongooseConnection:a.a.connection,ttl:parseInt(ie,10)/1e3}),cookie:{secure:"production"===de,maxAge:parseInt(ie,10)}})),pe.use("/api/v1/exams",N),pe.use("/api/v1/exams/questions",Z),pe.use("/api/v1/exams/students",G),pe.use("/api/v1/users",re);var fe=pe;const le=process.env.PORT||8080;fe.listen(le);t.default=fe}]);