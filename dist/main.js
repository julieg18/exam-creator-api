!function(e){var t={};function s(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(n,r,function(t){return e[t]}.bind(null,r));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=19)}([function(e,t,s){"use strict";function n(e,t){let s=!1;switch(t){case"string":s="string"==typeof e;break;case"number":s="number"==typeof e&&!Number.isNaN(e);break;case"boolean":s="boolean"==typeof e;break;case"array":s=Array.isArray(e);break;case"object":s=e.constructor===Object;break;default:return"unknown type"}return s}function r(e,t){const s=[];return t.forEach(t=>{Object.prototype.hasOwnProperty.call(e,t)||s.push(t)}),{doesObjHaveRequiredProps:0===s.length,missingProps:s}}function o(e){let t="";switch(e.length){case 0:t="";break;case 1:t=`${e[0]}`;break;case 2:t=`${e[0]} and ${e[1]}`;break;default:for(let s=0;s<e.length-1;s+=1)t+=`${e[s]}, `;t+=`and ${e[e.length-1]}`}return t}function a(e,t){const{doesObjHaveRequiredProps:s,missingProps:n}=r(t,e);return{doesReqHaveRequiredParams:s,errorMessage:`${o(n)} ${1===n.length?"is":"are"} required`}}function u(e,t){const s=[];return e.forEach(e=>{0===t[e].length&&s.push(e)}),{areReqParamsEmpty:0!==s.length,errorMessage:`${o(s)} must not be empty`}}function i(e){const t=e.split("");return t[0]=t[0].toUpperCase(),t.push("."),t.join("")}s.d(t,"f",(function(){return n})),s.d(t,"d",(function(){return r})),s.d(t,"b",(function(){return o})),s.d(t,"e",(function(){return a})),s.d(t,"a",(function(){return u})),s.d(t,"c",(function(){return i}))},function(e,t,s){"use strict";s.d(t,"j",(function(){return o})),s.d(t,"k",(function(){return a})),s.d(t,"l",(function(){return u})),s.d(t,"f",(function(){return i})),s.d(t,"g",(function(){return c})),s.d(t,"c",(function(){return d})),s.d(t,"a",(function(){return p})),s.d(t,"e",(function(){return f})),s.d(t,"h",(function(){return m})),s.d(t,"i",(function(){return b})),s.d(t,"d",(function(){return y})),s.d(t,"b",(function(){return l}));var n=s(3),r=s(0);async function o(e){let t=!1;try{t=1===await n.a.countDocuments({_id:e})}catch(e){t=!1}return t}async function a(e,t){return(await n.a.findById(e)).questions.some(e=>e._id==t)}async function u(e,t){return(await n.a.findById(e)).students.some(e=>e._id==t)}async function i(e){return await n.a.findById(e)}async function c(e,t){return(await n.a.findById(e)).questions.find(e=>e._id==t)}function d(e){const{doesObjHaveRequiredProps:t}=Object(r.d)(e,["name","type","options","answer"]);return t}function p(e){const t=Object.keys(e),s=[];return t.forEach(t=>{const n=e[t];switch(t){case"questionId":Object(r.f)(n,"string")||s.push("questionId must be a string");break;case"name":Object(r.f)(n,"string")||s.push("name must be a string");break;case"type":"radio"!==n&&"checkbox"!==n&&"true_false"!==n&&s.push("question type param must equal 'radio', 'checkbox', or 'true_false'");break;case"options":Object(r.f)(n,"array")||s.push("options must be an array");break;case"answer":Object(r.f)(n,"array")||s.push("answer must be a array");break;default:return t}return t}),{areQuestionParamsTheCorrectTypes:0===s.length,incorrectTypeParamErrsArr:s}}function b(e){const{options:t,answer:s}=e,n=[];return"true"!==s[0]&&"false"!==s[0]&&n.push("answer must contain a value of 'true' or 'false'"),0!==t.length&&n.push("options must be an empty array"),n}function m(e){const{options:t,answer:s}=e,n=[],o=t.every(e=>Object(r.f)(e,"object")),a=t.every(e=>Object(r.d)(e,["name","optionId"]).doesObjHaveRequiredProps),u=t.every(e=>Object(r.f)(e.name,"string")),i=t.every(e=>Object(r.f)(e.optionId,"string")),c=t.map(e=>e.optionId),d=new Set(c),p=c.length===d.size,b=t.some(e=>e.optionId===s[0]);return 0===t.length&&n.push("options must not be an empty array"),o&&a||n.push("options must be filled with objects(each object containing a name property and a optionId property)"),u||n.push("the options name properties must be strings"),i&&p||n.push("the options optionId properties must be unique strings"),b||n.push("the options answer property must contain one optionId"),n}function f(e){const{options:t,answer:s}=e,n=[],o=t.every(e=>Object(r.f)(e,"object")),a=t.every(e=>Object(r.d)(e,["name","optionId"]).doesObjHaveRequiredProps),u=t.every(e=>Object(r.f)(e.name,"string")),i=t.every(e=>Object(r.f)(e.optionId,"string")),c=t.map(e=>e.optionId),d=new Set(c),p=c.length===d.size,b=s.every(e=>t.some(t=>t.optionId===e));return 0===t.length&&n.push("options must not be an empty array"),o&&a||n.push("options must be filled with objects, each object containing a name property and a optionId property"),u||n.push("the options name properties must be strings"),i&&p||n.push("the options optionId properties must be unique strings"),b||n.push("the options answer property must be filled with at least one optionId"),n}function y(e){const{doesObjHaveRequiredProps:t}=Object(r.d)(e,["name"]);return t}function l(e){const t=[];Object.keys(e).forEach(s=>{const n=e[s];switch(s){case"name":Object(r.f)(n,"string")||t.push("name must be a string");break;case"takenTest":Object(r.f)(n,"boolean")||t.push("takenTest must be an boolean");break;case"studentId":Object(r.f)(n,"string")||t.push("studentId must be a string");break;case"questionsTaken":Object(r.f)(n,"array")||t.push("questionsTaken must be an array");break;case"questionsCorrect":Object(r.f)(n,"array")||t.push("questionsCorrect must be an array");break;case"questionsIncorrect":Object(r.f)(n,"array")||t.push("questionsIncorrect must be an array");break;default:return s}return s});const s=[...new Set(t)];return{doesStudentHaveCorrectTypes:0===t.length,incorrectTypeParamErrsArr:s}}},function(e,t,s){"use strict";s.d(t,"d",(function(){return o})),s.d(t,"e",(function(){return a})),s.d(t,"i",(function(){return c})),s.d(t,"k",(function(){return d})),s.d(t,"h",(function(){return p})),s.d(t,"j",(function(){return b})),s.d(t,"b",(function(){return m})),s.d(t,"c",(function(){return f})),s.d(t,"g",(function(){return y})),s.d(t,"f",(function(){return u})),s.d(t,"a",(function(){return i})),s.d(t,"l",(function(){return l}));var n=s(0),r=s(1);async function o(e,t,s){const{examId:n}=e.params;await Object(r.j)(n)?s():(t.status(400),t.json({error:"invalid examId"}))}function a(e,t,s){const{doesReqHaveRequiredParams:r,errorMessage:o}=Object(n.e)(["creator","title","questions","students"],e.body);r?s():(t.status(400),t.json({error:o}))}function u(e,t,s){const{doesReqHaveRequiredParams:r,errorMessage:o}=Object(n.e)(["title"],e.body);r?s():(t.status(400),t.json({error:o}))}function i(e,t,s){const r=Object.keys(e.body),o=[];r.forEach(t=>{const s=e.body[t];switch(t){case"creator":Object(n.f)(s,"string")||o.push("creator must be a string");break;case"title":Object(n.f)(s,"string")||o.push("title must be a string");break;case"questions":Object(n.f)(s,"array")||o.push("questions must be a array");break;case"students":Object(n.f)(s,"array")||o.push("students must be a array");break;default:return t}}),0===o.length?s():(t.status(400),t.json({error:Object(n.b)(o)}))}function c(e,t,s){const{questions:r}=e.body;r.every(e=>Object(n.f)(e,"object"))?s():(t.status(400),t.json({error:"questions must be an array of objects"}))}function d(e,t,s){const{students:r}=e.body;r.every(e=>Object(n.f)(e,"object"))?s():(t.status(400),t.json({error:"students must be an array of objects"}))}function p(e,t,s){const{questions:n}=e.body;n.every(e=>Object(r.c)(e))?s():(t.status(400),t.json({error:"each question element must have a name, type, options, and answer property"}))}function b(e,t,s){const{students:n}=e.body;n.every(e=>Object(r.d)(e))?s():(t.status(400),t.json({error:"each student element must have a name property"}))}function m(e,t,s){const{questions:o}=e.body,a=[];if(o.forEach(e=>{const{areQuestionParamsTheCorrectTypes:t,incorrectTypeParamErrsArr:s}=Object(r.a)(e);t||a.push(...s)}),0===a.length)s();else{const e=new Set(a);t.status(400),t.json({error:`questions' param values must be correct types: ${Object(n.b)([...e])}`})}}function f(e,t,s){const{students:o}=e.body,a=[];if(o.forEach(e=>{const{doesStudentHaveCorrectTypes:t,incorrectTypeParamErrsArr:s}=Object(r.b)(e);return t||a.push(...s),e}),0===a.length)s();else{const e=new Set(a);t.status(400),t.json({error:`students' param values must be correct types: ${Object(n.b)([...e])}`})}}function y(e,t,s){const{questions:o}=e.body,a=[],u=[],i=[],c=[];if(o.forEach(e=>{switch(e.type){case"true_false":u.push(...Object(r.i)(e));break;case"checkbox":i.push(...Object(r.e)(e));break;case"radio":c.push(...Object(r.h)(e))}}),0!==u.length){const e=new Set(u);a.push(`for true_false type, ${Object(n.b)([...e])}`)}if(0!==c.length){const e=new Set(c);a.push(`for radio type, ${Object(n.b)([...e])}`)}if(0!==i.length){const e=new Set(i);a.push(`for checkbox type, ${Object(n.b)([...e])}`)}if(0===a.length)s();else{const e=new Set(a);t.status(400),t.json({error:`questions' params must have correct values for type: ${Object(n.b)([...e])}`})}}function l(e,t,s){const{title:r}=e.body;Object(n.f)(r,"string")?s():(t.status(400),t.json({error:"title must be a string"}))}},function(e,t,s){"use strict";var n=s(5),r=s.n(n),o=s(14),a=s.n(o);const{Schema:u,model:i}=r.a,c=new u({name:{type:String,required:!0},optionId:{type:String,required:!0}}),d=new u({name:{type:String,required:!0},type:{type:String,required:!0},options:[c],answer:[{type:String,required:!0}]}),p=new u({_id:{type:String,default:a.a.generate},name:{type:String,required:!0},takenTest:{type:Boolean,required:!0},tookTest:Date,questionsTaken:[String],questionsCorrect:[String],questionsIncorrect:[String],score:String}),b=i("Exam",new u({creator:{type:String,required:!0},lastUpdated:{type:Date,required:!0},title:{type:String,required:!0},numberOfQuestions:{type:Number,required:!0},questions:[d],students:[p]}));t.a=b},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("bcryptjs")},function(e,t,s){"use strict";(function(e){var n=s(4),r=s.n(n),o=s(5),a=s.n(o),u=s(9),i=s.n(u),c=s(8),d=s.n(c),p=s(10),b=s.n(p),m=s(11),f=s.n(m),y=s(12),l=s.n(y),j=s(13),h=s.n(j),g=s(18),q=s(16),w=s(17),O=s(15);i.a.config();const{SESS_NAME:I,SESS_SECRET:v,SESS_LIFETIME:x,DB:k,NODE_ENV:S}=process.env,E=r()();E.use(f()());const P=k;a.a.connect(P,{dbName:"exam-creator",useNewUrlParser:!0,useUnifiedTopology:!0}),E.use(b.a.json());const R=l()(d.a);E.use(d()({name:I,secret:v,saveUninitialized:!1,resave:!1,store:new R({mongooseConnection:a.a.connection,ttl:parseInt(x,10)/1e3}),cookie:{sameSite:!0,httpOnly:!0,secure:"production"===S,maxAge:parseInt(x,10)}})),E.use("/api/v1/exams",g.a),E.use("/api/v1/exams/questions",q.a),E.use("/api/v1/exams/students",w.a),E.use("/api/v1/users",O.a),E.use(r.a.static("client/build")),E.get("*",(t,s)=>{s.sendFile(h.a.resolve(e,"client","build","index.html"))}),t.a=E}).call(this,"/")},function(e,t){e.exports=require("express-session")},function(e,t){e.exports=require("dotenv")},function(e,t){e.exports=require("body-parser")},function(e,t){e.exports=require("helmet")},function(e,t){e.exports=require("connect-mongo")},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("shortid")},function(e,t,s){"use strict";var n=s(4),r=s.n(n),o=s(6),a=s.n(o),u=s(5),i=s.n(u);const c=new i.a.Schema({username:{type:String,required:!0},email:{type:String,required:!0,validate:{validator:e=>d.doesNotExist({email:e}),message:"Email already exists"}},password:{type:String,required:!0}},{timestamps:!0});c.statics.doesNotExist=async function(e){return 0===await this.where(e).countDocuments()};const d=i.a.model("User",c);var p=d,b=s(3);const{SESS_NAME:m}=process.env;async function f(e){let t=!1;try{t=1===await p.countDocuments({email:e})}catch(e){t=!1}return t}var y=s(0);function l(e,t,s){const{session:{user:n}}=e;n?(t.status(400),t.json({error:"A user is already logged in."})):s()}function j(e,t,s){const{session:{user:n}}=e;n?s():(t.status(401),t.json({error:"User is not logged in."}))}const h=r.a.Router();h.route("/").get(j,(async function(e,t){const{session:{user:{userId:s}}}=e,n=await p.findById(s);t.json({message:"User found.",user:n})})).delete(j,(async function(e,t){const{session:s}=e,{user:{userId:n}}=s;try{await p.findByIdAndRemove(n,{useFindAndModify:!1}),await b.a.deleteMany({creator:n}),s.destroy(()=>{t.clearCookie(m),t.status(200),t.json({message:"User deleted.",userId:n})})}catch(e){t.status(501),t.json({error:"Could not delete user."})}})),h.route("/signup").post(l,(function(e,t,s){const{doesReqHaveRequiredParams:n,errorMessage:r}=Object(y.e)(["email","username","password"],e.body);n?s():(t.status(400),t.json({error:Object(y.c)(r)}))}),(function(e,t,s){const n=[];["username","email","password"].forEach(t=>{const s=e.body[t];Object(y.f)(s,"string")||n.push(`${t} must be a string`)}),0===n.length?s():(t.status(400),t.json({error:Object(y.c)(Object(y.b)(n))}))}),(function(e,t,s){const{areReqParamsEmpty:n,errorMessage:r}=Object(y.a)(["username","email","password"],e.body);n?(t.status(400),t.json({error:Object(y.c)(r)})):s()}),(async function(e,t,s){const{email:n}=e.body;await f(n)?(t.status(400),t.json({error:"Email already exists."})):s()}),(function(e,t,s){const{username:n}=e.body,r=[];/\S/g.test(n)||r.push("must not contain only whitespace"),n.length>15&&r.push("must not exceed 15 characters"),0===r.length?s():(t.status(400),t.json({error:`Username ${Object(y.b)(r)}.`}))}),(function(e,t,s){const{email:n}=e.body;/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(n)?s():(t.status(400),t.json({error:"Email is invalid."}))}),(function(e,t,s){const{password:n}=e.body,r=[];/\s/g.test(n)&&r.push("must not contain any whitespace"),n.length<8&&r.push("length must be at least 8 characters"),n.length>50&&r.push("length must not exceed 50 characters"),0===r.length?s():(t.status(400),t.json({error:`Password ${Object(y.b)(r)}.`}))}),(async function(e,t){const{username:s,email:n,password:r}=e.body,o={username:s,email:n,password:await a.a.hash(r,10)};try{const s=await new p(o).save();e.session.user={userId:s._id},t.status(201),t.json({message:"User added.",newUser:s})}catch(e){t.status(501),t.json({error:"Could not add user."})}})),h.route("/login").post(l,(function(e,t,s){const{doesReqHaveRequiredParams:n,errorMessage:r}=Object(y.e)(["email","password"],e.body);n?s():(t.status(400),t.json({error:Object(y.c)(r)}))}),(function(e,t,s){const{areReqParamsEmpty:n,errorMessage:r}=Object(y.a)(["email","password"],e.body);n?(t.status(400),t.json({error:Object(y.c)(r)})):s()}),(async function(e,t,s){const{email:n}=e.body;await f(n)?s():(t.status(400),t.json({error:"Email is incorrect."}))}),(async function(e,t,s){const{email:n,password:r}=e.body,o=await p.findOne({email:n});await a.a.compare(r,o.password)?s():(t.status(400),t.json({error:"Password is incorrect."}))}),(async function(e,t){const{email:s}=e.body;try{const n=await p.findOne({email:s});e.session.user={userId:n._id},t.status(200),t.json({message:"User logged in.",user:n})}catch(e){t.status(501),t.json({error:"Could not login user."})}})),h.route("/logout").post(j,(function(e,t){const{session:s}=e,{user:{userId:n}}=s;s.destroy(e=>{e?(t.status(500),t.json({error:"Something went wrong."})):(t.clearCookie(m),t.status(200),t.json({message:"User logged out.",userId:n}))})})),h.route("/exams").get(j,(async function(e,t){const{session:{user:{userId:s}}}=e;try{const e=await b.a.find({creator:s});t.status(200),t.json({message:"Exams found.",exams:e})}catch(e){t.status(501),t.json({error:"Could not get exams."})}}));t.a=h},function(e,t,s){"use strict";var n=s(4),r=s.n(n),o=s(2),a=s(0),u=s(1);async function i(e,t,s){const{examId:n}=e.params,{questionId:r}=e.body;await Object(u.k)(n,r)?s():(t.status(400),t.json({error:"invalid questionId"}))}function c(e,t,s){const{areQuestionParamsTheCorrectTypes:n,incorrectTypeParamErrsArr:r}=Object(u.a)(e.body);n?s():(t.status(400),t.json({error:Object(a.b)(r)}))}var d=s(3);const p=r.a.Router();p.route("/:examId").post(o.d,(function(e,t,s){const{doesReqHaveRequiredParams:n,errorMessage:r}=Object(a.e)(["name","type","options","answer"],e.body);n?s():(t.status(400),t.json({error:r}))}),c,(function(e,t,s){let n=[];switch(e.body.type){case"checkbox":n=[...Object(u.e)(e.body)];break;case"radio":n=[...Object(u.h)(e.body)];break;case"true_false":n=[...Object(u.i)(e.body)]}if(0===n.length)s();else{const s=`for a question with a ${e.body.type} type: ${Object(a.b)(n)}`;t.status(400),t.json({error:s})}}),(async function(e,t){const{examId:s}=e.params,{name:n,type:r,options:o,answer:a}=e.body,u={name:n,type:r,options:o,answer:a},i=await d.a.findByIdAndUpdate(s,{$push:{questions:u},$inc:{numberOfQuestions:1},$set:{lastUpdated:Date.now()}},{useFindAndModify:!1,new:!0});t.status(201),t.json({message:"question added to exam",updatedExam:i})})).put(o.d,i,(function(e,t,s){[["questionId","name"],["questionId","type"],["questionId","options"],["questionId","answer"]].some(t=>{const{doesReqHaveRequiredParams:s}=Object(a.e)(t,e.body);return s})?s():(t.status(400),t.json({error:"questionId and at least one param(type, options, name, or answer) to be changed is required"}))}),c,(async function(e,t,s){const{examId:n}=e.params,{questionId:r}=e.body;let o=await Object(u.g)(n,r);o=o.toObject();const i={};["name","type","options","answer"].forEach(t=>(i[t]=e.body[t]?e.body[t]:o[t],t));let c=[];switch(i.type){case"checkbox":c=[...Object(u.e)(i)];break;case"radio":c=[...Object(u.h)(i)];break;case"true_false":c=[...Object(u.i)(i)]}if(0===c.length)s();else{const e=`for a question with a ${i.type} type: ${Object(a.b)(c)}`;t.status(400),t.json({error:e})}}),(async function(e,t){const s=await Object(u.f)(e.params.examId),n=s.questions.id(e.body.questionId);["name","type","options","answer"].forEach(t=>{n[t]=e.body[t]?e.body[t]:n[t]}),await s.save();const r=await d.a.findByIdAndUpdate(s._id,{$set:{lastUpdated:Date.now()}},{useFindAndModify:!1,new:!0});t.status(200),t.json({message:"question edited",updatedExam:r})})).delete(o.d,i,(async function(e,t){const{examId:s}=e.params,n=await Object(u.f)(e.params.examId);n.questions.id(e.body.questionId).remove(),await n.save(),await d.a.findByIdAndUpdate(s,{$inc:{numberOfQuestions:-1},$set:{lastUpdated:Date.now()}},{useFindAndModify:!1,new:!0}),t.status(200),t.json({message:"question deleted"})}));t.a=p},function(e,t,s){"use strict";var n=s(4),r=s.n(n),o=s(2),a=s(0),u=s(1);async function i(e,t,s){const{examId:n}=e.params,{studentId:r}=e.body;await Object(u.l)(n,r)?s():(t.status(400),t.json({error:"invalid studentId"}))}var c=s(3);const d=r.a.Router();d.route("/:examId").post(o.d,(function(e,t,s){const{doesReqHaveRequiredParams:n,errorMessage:r}=Object(a.e)(["name"],e.body);n?s():(t.status(400),t.json({error:r}))}),(function(e,t,s){const{doesStudentHaveCorrectTypes:n,incorrectTypeParamErrsArr:r}=Object(u.b)(e.body);n?s():(t.status(400),t.json({error:`${Object(a.b)(r)}`}))}),(async function(e,t){const{examId:s}=e.params,{name:n}=e.body,r={name:n,takenTest:!1},o=await c.a.findByIdAndUpdate(s,{$push:{students:r}},{useFindAndModify:!1,new:!0});t.status(201),t.json({message:"student added",updatedExam:o})})).put(o.d,i,(function(e,t,s){const{doesReqHaveRequiredParams:n,errorMessage:r}=Object(a.e)(["studentId","name"],e.body);n?s():(t.status(400),t.json({error:r}))}),(function(e,t,s){const{name:n}=e.body;Object(a.f)(n,"string")?s():(t.status(400),t.json({error:"name must be a string"}))}),(async function(e,t){const s=await Object(u.f)(e.params.examId),n=s.students.id(e.body.studentId);n.name=e.body.name?e.body.name:n.name,await s.save(),t.status(200),t.json({message:"student name edited",updatedExam:s})})).delete(o.d,i,(async function(e,t){const s=await Object(u.f)(e.params.examId);s.students.id(e.body.studentId).remove(),await s.save(),t.status(200),t.json({message:"student deleted",updatedExam:s})})),d.route("/save-exam-results/:examId").put(o.d,(function(e,t,s){const{doesReqHaveRequiredParams:n,errorMessage:r}=Object(a.e)(["studentId","questionsCorrect","questionsIncorrect"],e.body);n?s():(t.status(400),t.json({error:r}))}),i,(function(e,t,s){const{questionsIncorrect:n,questionsCorrect:r}=e.body,o={questionsIncorrect:n,questionsCorrect:r},{doesStudentHaveCorrectTypes:i,incorrectTypeParamErrsArr:c}=Object(u.b)(o);i?s():(t.status(400),t.json({error:Object(a.b)(c)}))}),(async function(e,t,s){const n=[],{questionsIncorrect:r,questionsCorrect:o}=e.body,i=(await Object(u.f)(e.params.examId)).questions.map(e=>e._id).sort();[...r,...o].sort().join("")!==i.join("")&&n.push("questionsIncorrect must contain the questionIds of the questions that the student got incorrect and questionsCorrect must contain the questionIds of the questions that the student got correct"),0===n.length?s():(t.status(400),t.json({error:Object(a.b)(n)}))}),(async function(e,t){const{studentId:s,questionsCorrect:n,questionsIncorrect:r}=e.body,o=await Object(u.f)(e.params.examId),a=o.students.id(s);a.questionsCorrect=n,a.questionsIncorrect=r,a.questionsTaken=[...r,...n],a.takenTest=!0,await o.save(),t.status(200),t.json({message:"exam results saved",updatedExam:o})}));t.a=d},function(e,t,s){"use strict";var n=s(4),r=s.n(n),o=s(2),a=s(3),u=s(1);const i=r.a.Router();i.route("/").post(o.e,o.a,o.i,o.k,o.h,o.j,o.b,o.c,o.g,(async function(e,t){const{title:s,creator:n,questions:r,students:o}=e.body,u=r.map(e=>{const{name:t,type:s,options:n,answer:r}=e;return{name:t,type:s,options:n.map(e=>({name:e.name,optionId:e.optionId})),answer:r}}),i=o.map(e=>{const{name:t}=e;return{name:t,takenTest:!1}}),c={title:s,creator:n,lastUpdated:Date.now(),numberOfQuestions:r.length,questions:u,students:i},d=await new a.a(c).save().catch(()=>{t.status(501),t.json({error:"could not create exam"})});t.status(201),t.json({message:"exam created",exam:d})})),i.route("/:examId").get(o.d,(async function(e,t){const{examId:s}=e.params,n=await Object(u.f)(s);t.status(200),t.json({message:"exam found",exam:n})})).put(o.d,o.f,o.l,(async function(e,t){const{examId:s}=e.params,{title:n}=e.body,r=await a.a.findByIdAndUpdate(s,{$set:{title:n,lastUpdated:Date.now()}},{new:!0,useFindAndModify:!1});t.status(200),t.json({message:"exam title updated",updatedExam:r})})).delete(o.d,(async function(e,t){const{examId:s}=e.params;await a.a.findByIdAndDelete(s),t.status(200),t.json({message:"exam deleted"})}));t.a=i},function(e,t,s){"use strict";s.r(t);var n=s(7);const r=process.env.PORT||8080;n.a.listen(r),t.default=n.a}]);